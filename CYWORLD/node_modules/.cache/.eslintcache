[{"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\index.js":"1","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\App.js":"2","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\reportWebVitals.js":"3","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Contact.jsx":"4","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Project.jsx":"5","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Home.jsx":"6","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Profile.jsx":"7"},{"size":555,"mtime":1694364840209,"results":"8","hashOfConfig":"9"},{"size":659,"mtime":1697037349932,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1694364840210,"results":"11","hashOfConfig":"9"},{"size":7607,"mtime":1705163363548,"results":"12","hashOfConfig":"9"},{"size":24673,"mtime":1705163345755,"results":"13","hashOfConfig":"9"},{"size":11881,"mtime":1705083274121,"results":"14","hashOfConfig":"9"},{"size":12888,"mtime":1705163355232,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17gm053",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\index.js",[],[],"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\App.js",[],[],"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\reportWebVitals.js",[],[],"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Contact.jsx",[],[],"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Project.jsx",["38","39","40","41"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Project = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const goToHome = () => {\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const goToProfile = () => {\r\n        navigate(\"/profile\");\r\n    };\r\n\r\n    const goToProject = () => {\r\n        navigate(\"/project\");\r\n    };\r\n\r\n    const goToContact = () => {\r\n        navigate(\"/contact\");\r\n    };\r\n\r\n    const [cyImageIndex, setCyImageIndex] = useState(0);\r\n    const cyImages = ['/background/c_page.1.png', '/background/c_page.2.png', '/background/c_page.3.png', '/background/c_page.4.png'];\r\n\r\n    const goCyImage = (index) => {\r\n        setCyImageIndex(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const cyInterval = setInterval(() => {\r\n            setCyImageIndex((prevIndex) => (prevIndex + 1) % cyImages.length);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearInterval(cyInterval);\r\n        };\r\n    }, [cyImages]);\r\n\r\n    const [jbtiImageIndex, setJbtiImageIndex] = useState(0);\r\n    const jbtiImages = ['/background/j_page.1.png', '/background/j_page.2.png', '/background/j_page.3.png', '/background/j_page.4.png', '/background/j_page.5.png'];\r\n\r\n    const goJbtiImage = (index) => {\r\n        setJbtiImageIndex(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const jbtiInterval = setInterval(() => {\r\n            setJbtiImageIndex((prevIndex) => (prevIndex + 1) % jbtiImages.length);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearInterval(jbtiInterval);\r\n        };\r\n    }, [jbtiImages]);\r\n\r\n\r\n    const [penpalImageIndex, setPenpalImageIndex] = useState(0);\r\n    const penImages = ['/background/p_page.1.png', '/background/p_page.2.png', '/background/p_page.3.png', '/background/p_page.4.png', '/background/p_page.5.png'];\r\n\r\n    const goPenpalImage = (index) => {\r\n        setPenpalImageIndex(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const penInterval = setInterval(() => {\r\n            setPenpalImageIndex((prevIndex) => (prevIndex + 1) % penImages.length);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearInterval(penInterval);\r\n        };\r\n    }, [penImages]);\r\n\r\n\r\n    const [sellentImageIndex, setSellentImageIndex] = useState(0);\r\n    const sellImages = ['/background/s_page.1.png', '/background/s_page.2.png', '/background/s_page.3.png', '/background/s_page.4.png', '/background/s_page.5.png'];\r\n\r\n    const goSellentImage = (index) => {\r\n        setSellentImageIndex(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const sellentInterval = setInterval(() => {\r\n            setSellentImageIndex((prevIndex) => (prevIndex + 1) % sellImages.length);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearInterval(sellentInterval);\r\n        };\r\n    }, [sellImages]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Body>\r\n                <BookCover>\r\n                    <Page>\r\n                        <Main>\r\n                            <Bind>\r\n                                <Filed>\r\n                                    <FiledTop>PROJECT</FiledTop>\r\n\r\n                                    <Bind2>\r\n                                        <Contents>\r\n                                            <img src={cyImages[cyImageIndex]} alt=\"carousel\" />\r\n                                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                {cyImages.map((_, index) => (\r\n                                                    <span\r\n                                                        key={index}\r\n                                                        onClick={() => goCyImage(index)}\r\n                                                        style={{\r\n                                                            width: '10px',\r\n                                                            height: '10px',\r\n                                                            borderRadius: '50%',\r\n                                                            backgroundColor: index === cyImageIndex ? '#3B87AB' : 'gray',\r\n                                                            margin: '5px',\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                    ></span>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Contents>\r\n                                        <ContentsDetail>\r\n                                            <ContentsDetailTitle>싸이월드 자기소개서</ContentsDetailTitle>\r\n                                            (링크 - <a href=\"https://github.com/jaeho13/Cyworld\">https://github.com/jaeho13/Cyworld</a>)\r\n                                            <br />\r\n                                            <br />\r\n                                            1. 개발 배경 및 내용<br />\r\n                                            - 어린 시절 유행하던 싸이월드 자기소개서  <br />\r\n                                            <br />\r\n\r\n                                            2. 개발 목표 <br />\r\n                                            - CSS 학습 <br />\r\n                                            - 자기소개서 개선 <br />\r\n                                            <br />\r\n\r\n                                            3. 사용 기술 <br />\r\n                                            - React, CSS <br />\r\n                                            <br />\r\n\r\n                                            4. 프로젝트 후기 <br />\r\n                                            개발을 처음 시작하고 급급하게 만들었던 자기소개서를 보면서 볼수록 부족하다는 생각을 많이 들었다. <br />\r\n                                            자기소개서를 새로 만들기로 결심하고, 어떻게 만들어야 사람들이 봤을 때 기억에 남을까 생각을 많이 했다. <br />\r\n                                            어린 시절에 유행하던 싸이월드로 자기소개서를 만들면 사람들에 공감을 받을 수 있을 것 같아서 만들기 시작했는데, 생각했던 것보다 잘 나온 것 같아서 재밌었다. <br />\r\n                                            <br />\r\n                                        </ContentsDetail>\r\n\r\n                                    </Bind2>\r\n\r\n                                    <Bind2>\r\n                                        <Contents>\r\n                                            <img src={jbtiImages[jbtiImageIndex]} alt=\"jbti_carousel\" />\r\n                                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                {jbtiImages.map((_, index) => (\r\n                                                    <span\r\n                                                        key={index}\r\n                                                        onClick={() => goJbtiImage(index)}\r\n                                                        style={{\r\n                                                            width: '10px',\r\n                                                            height: '10px',\r\n                                                            borderRadius: '50%',\r\n                                                            backgroundColor: index === jbtiImageIndex ? '#3B87AB' : 'gray',\r\n                                                            margin: '5px',\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                    ></span>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Contents>\r\n                                        <ContentsDetail>\r\n                                            <ContentsDetailTitle>Jell-BTI</ContentsDetailTitle>\r\n                                            (링크 - <a href=\"https://github.com/kimpizza/Jell-BTI_Project\">https://github.com/kimpizza/Jell-BTI_Project</a>)\r\n                                            <br />\r\n                                            <br />\r\n                                            1. 개발 배경 및 내용<br />\r\n                                            - 내 취향에 맞는 하리보 젤리 찾기<br />\r\n                                            <br />\r\n\r\n                                            2. 개발 목표 <br />\r\n                                            - 젤리 MBTI 테스트로 성향 파악<br />\r\n                                            - 외부 API 사용 학습 및 백엔트 팀과 협업으로 실무 능력 향상 <br />\r\n                                            - RESTful API 이해<br />\r\n                                            <br />\r\n\r\n                                            3. 역할 <br />\r\n                                            - Frontend <br />\r\n                                            - 기획 <br />\r\n                                            - RESTful API를 이용한 React, Spring 게시판 및 댓글 CRUD 구현 <br />\r\n                                            - Jelly MBTI 테스트 구현 <br />\r\n                                            <br />\r\n\r\n                                            4. 사용 기술 <br />\r\n                                            - React, Spring, Oracle, Figma <br />\r\n\r\n                                            <br />\r\n                                            5. 프로젝트 후기 <br />\r\n                                            처음으로 혼자가 아닌 팀으로 시작하게 된 프로젝트이다. 프로젝트에서는 게시판 및 댓글 기능 CRUD를 맡았는데,\r\n                                            처음에는 어떻게 구현을 해야할 지 몰라 많이 힘들었지만 팀원과의 소통으로 개발의 방향성을 잡고 배워가며 맡은 일을 진행할 수 있었다. <br />\r\n                                            이번 프로젝트에서 나는 게시판을 만드는 CRUD를 배웠고, 팀원들과의 소통이 얼마나 중요한지도 알 수 있었다. <br />\r\n                                            더불어, 맡은 업무에 대한 책임감을 키우는 기회가 되어서 좋았다. <br />\r\n                                            <br />\r\n                                        </ContentsDetail>\r\n                                    </Bind2>\r\n\r\n                                    <Bind2>\r\n                                        <Contents>\r\n                                            <img src={penImages[penpalImageIndex]} alt=\"pen_carousel\" />\r\n                                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                {penImages.map((_, index) => (\r\n                                                    <span\r\n                                                        key={index}\r\n                                                        onClick={() => goPenpalImage(index)}\r\n                                                        style={{\r\n                                                            width: '10px',\r\n                                                            height: '10px',\r\n                                                            borderRadius: '50%',\r\n                                                            backgroundColor: index === penpalImageIndex ? '#3B87AB' : 'gray',\r\n                                                            margin: '5px',\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                    ></span>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Contents>\r\n                                        <ContentsDetail>\r\n                                            <ContentsDetailTitle>펜팔펜스</ContentsDetailTitle>\r\n                                            (링크 - <a href=\"https://github.com/jaeho13/PenPalPens\">https://github.com/jaeho13/PenPalPens</a>)\r\n                                            <br />\r\n                                            <br />\r\n                                            1. 개발 배경 및 내용<br />\r\n                                            - 어릴 적 펜팔(penpal) 친구와 주고받던 교환일기, 펜(pens)으로 다이어리에 작성하던 일기를 웹으로 구현해 시간이 지나도 사라지지 않는 일기장을 구현 <br />\r\n                                            <br />\r\n                                            2. 개발 목표 <br />\r\n                                            - 일기 및 친구와의 교환일기 작성 <br />\r\n                                            - React, Spring 게시판 CRUD 정리 <br />\r\n                                            - 카카오 로그인 API 구현 <br />\r\n                                            <br />\r\n                                            3. 역할 <br />\r\n                                            - Frontend <br />\r\n                                            - 기획, 디자인 및 DB설계 <br />\r\n                                            - 카카오 로그인 API 구현 <br />\r\n                                            - RESTful API를 이용한 React, Spring 게시판 CRUD 구현 <br />\r\n                                            <br />\r\n                                            4. 사용 기술 <br />\r\n                                            - React, Spring, Oracle, Figma <br />\r\n                                            <br />\r\n                                            5. 프로젝트 후기 <br />\r\n                                            저번 프로젝트에 이어서 React, Spring 게시판 CRUD를 구현하며 다시 한번 복습할 수 있었다. <br />\r\n                                            나아가 저번에는 구현하지 못했던 로그인까지 카카오 로그인 API를 사용하여 구현할 수 있었다. <br />\r\n                                            이번 프로젝트에서도 CRUD를 구현헀는데, 확실히 모든 개발은 CRUD에 의거하여 조금씩 수정하며 만들어지는 것 같다.\r\n                                            또한 어렵게만 생각했던 로그인 API도 막상 구현해보니 어렵지 않고 재밌게 할 수 있었다. <br />\r\n                                            <br />\r\n                                        </ContentsDetail>\r\n                                    </Bind2>\r\n\r\n                                    <Bind2>\r\n                                        <Contents>\r\n                                            <img src={sellImages[sellentImageIndex]} alt=\"sell_carousel\" />\r\n                                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                {sellImages.map((_, index) => (\r\n                                                    <span\r\n                                                        key={index}\r\n                                                        onClick={() => goSellentImage(index)}\r\n                                                        style={{\r\n                                                            width: '10px',\r\n                                                            height: '10px',\r\n                                                            borderRadius: '50%',\r\n                                                            backgroundColor: index === sellentImageIndex ? '#3B87AB' : 'gray',\r\n                                                            margin: '5px',\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                    ></span>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Contents>\r\n                                        <ContentsDetail>\r\n                                            <ContentsDetailTitle>셀런트</ContentsDetailTitle>\r\n                                            (링크 - <a href=\"https://github.com/jaeho13/Sellent\">https://github.com/jaeho13/Sellent</a>)\r\n                                            <br />\r\n                                            <br />\r\n                                            1. 개발 배경 및 내용<br />\r\n                                            - 자신이 가진 재능을 판매하거나 구매할 수 있는 재능 거래 사이트 <br />\r\n                                            <br />\r\n                                            2. 개발 목표 <br />\r\n                                            - 낭비되고 있는 재능을 구매하고 판매 <br />\r\n                                            - React, Spring 게시판 및 댓글 CRUD 정리 <br />\r\n                                            - 카카오, 네이버 로그인 API 구현 <br />\r\n                                            - 카카오 지도, 결제 API 구현 <br />\r\n                                            <br />\r\n                                            3. 역할 <br />\r\n                                            - Frontend <br />\r\n                                            - 기획 및 디자인 <br />\r\n                                            - 네이버 및 카카오 로그인 API 구현 <br />\r\n                                            - 카카오 지도 API, 카카오 결제 API <br />\r\n                                            - RESTful API를 이용한 React, Spring 게시판 및 댓글 CRUD 구현 <br />\r\n                                            <br />\r\n                                            4. 사용 기술 <br />\r\n                                            - React, Spring, Oracle, Figma <br />\r\n                                            <br />\r\n                                            5. 프로젝트 후기 <br />\r\n                                            이번 프로젝트에서는 주로 사용하던 Open API 말고, 결제, 지도 등 다양한 API를 사용해 보았다. <br />\r\n                                            확실히 API 사용이 익숙해져서인지 처음 API를 사용했을 때 보다 이해가 빠르고 쉽게 접근할 수 있었다. <br />\r\n                                            추가적으로 REST API 백엔드 코드를 구현해 보면서, 서버 - 클라이언트 사이의 통신 과정을 더 자세히 이해할 수 있었다. <br />\r\n                                        </ContentsDetail>\r\n                                    </Bind2>\r\n                                </Filed>\r\n\r\n                                <Right>\r\n                                    <RightButton1 onClick={goToHome}>Home</RightButton1>\r\n                                    <RightButton2 onClick={goToProfile}>Profile</RightButton2>\r\n                                    <RightButton3 onClick={goToProject}>Project</RightButton3>\r\n                                    <RightButton4 onClick={goToContact}>Contact</RightButton4>\r\n                                </Right>\r\n                            </Bind>\r\n                        </Main>\r\n                    </Page>\r\n                </BookCover>\r\n            </Body >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Project;\r\n\r\nconst Body = styled.div`\r\n    font-size: 16px;\r\n    background-color: #a3a3a3;\r\n    background-image: url(/background/pattern.png);\r\n    background-size: 100px;\r\n    /* position: fixed; */\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst BookCover = styled.div`\r\n    width: 70%;\r\n    height: 50rem;\r\n    border: 2px solid #738186;\r\n    border-radius: 2rem;\r\n    background-color: #b4d1da;\r\n    margin: 0 auto;\r\n    /* margin-top: 4rem; */\r\n`\r\nconst Page = styled.div`\r\n    width: 96%;\r\n    height: 47rem;\r\n    border: 3.5px dashed white;\r\n    border-radius: 1rem;\r\n    margin: 0 auto;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst Main = styled.div`\r\n    width: 97%;\r\n    height: 45rem;\r\n    border: 2px solid #d4d4d4;\r\n    border-radius: 1rem;\r\n    background-color: #d4d4d4;\r\n    margin: 0 auto;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst Bind = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\nconst Filed = styled.div`\r\n    width: 95%;\r\n    height: 43rem;\r\n    /* border: 2px solid red; */\r\n    border-radius: 1rem;\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    margin-top: 1rem;\r\n    margin-left: 2rem;\r\n    overflow: auto; /* 스크롤 추가 */\r\n    overflow-x: hidden; /* 가로 스크롤 제거 */\r\n`\r\n\r\nconst FiledTop = styled.div`\r\n    width: 100%;\r\n    height: 1.2rem;\r\n    font-size: 1.2rem;\r\n    color: #3B87AB;\r\n    font-weight: bold;\r\n    margin-top: 1.2rem;\r\n    margin-left: 1.2rem;\r\n    margin-bottom: 2rem;\r\n    /* border: 2px solid black; */\r\n`\r\n\r\nconst Bind2 = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\nconst Contents = styled.div`\r\n    width: 46%;\r\n    height: 15rem;\r\n    margin-left: 2rem;\r\n    margin-bottom: 3rem;\r\n    border: 2px solid #A3A3A3;\r\n    border-radius: 1rem;\r\n    opacity: 0.9;\r\n    img {\r\n        width: 100%; /* Contents의 가로 너비에 맞게 이미지 너비 조정 */\r\n        height: 100%; /* Contents의 세로 높이에 맞게 이미지 높이 조정 */\r\n        object-fit: cover; /* 이미지를 Contents에 맞게 조절 */\r\n        border-radius: 1rem; /* 이미지에도 둥근 모서리를 적용 */\r\n    }\r\n`\r\n\r\nconst ContentsDetail = styled.div`\r\n    width: 46%;\r\n    height: 15rem;\r\n    margin-left: 2rem;\r\n    margin-bottom: 3rem;\r\n    border-radius: 1rem;\r\n    padding-left: 0.5rem;\r\n    /* border: 2px solid red; */\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    overflow: auto; /* 스크롤 추가 */\r\n    overflow-x: hidden; /* 가로 스크롤 제거 */\r\n    white-space: pre-wrap;\r\n`\r\n\r\nconst ContentsDetailTitle = styled.div`\r\n    font-size: 2rem;\r\n    /* padding: 0.5rem; */\r\n `\r\n\r\n\r\nconst Right = styled.div`\r\n    width: 10%;\r\n    height: 40rem;\r\n    /* border: 2px solid blue;   */\r\n    /* margin-left: 3rem; */\r\n    margin-top: 2rem;\r\n`\r\n\r\nconst RightButton1 = styled.button`\r\n    width: 100%;\r\n    height: 3rem;\r\n    border: 2px solid grey;\r\n    border-top-right-radius: 0.5rem;\r\n    border-bottom-right-radius: 0.5rem;\r\n    margin-top: 4rem;\r\n    font-size: 1.5rem;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3B87AB;\r\n    display: flex;\r\n    float: left;\r\n    align-items: center;\r\n`\r\n\r\nconst RightButton2 = styled.button`\r\n    width: 100%;\r\n    height: 3rem;\r\n    border: 2px solid grey;\r\n    border-top-right-radius: 0.5rem;\r\n    border-bottom-right-radius: 0.5rem;\r\n    margin-top: 1rem;\r\n    font-size: 1.5rem;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3B87AB;\r\n    display: flex;\r\n    float: left;\r\n    align-items: center;\r\n`\r\n\r\nconst RightButton3 = styled.button`\r\n    width: 100%;\r\n    height: 3rem;\r\n    border: 2px solid grey;\r\n    border-top-right-radius: 0.5rem;\r\n    border-bottom-right-radius: 0.5rem;\r\n    margin-top: 1rem;\r\n    font-size: 1.5rem;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    cursor: pointer;\r\n    /* color: white;\r\n    background-color: #3B87AB; */\r\n    color: black;\r\n    background-color: white;\r\n    display: flex;\r\n    float: left;\r\n    align-items: center;\r\n`\r\n\r\nconst RightButton4 = styled.button`\r\n    width: 100%;\r\n    height: 3rem;\r\n    border: 2px solid grey;\r\n    border-top-right-radius: 0.5rem;\r\n    border-bottom-right-radius: 0.5rem;\r\n    margin-top: 1rem;\r\n    font-size: 1.5rem;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: #3B87AB;\r\n    display: flex;\r\n    float: left;\r\n    align-items: center;\r\n`","D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Home.jsx",[],[],"D:\\Cyworld\\Cyworld\\CYWORLD\\src\\Components\\Profile.jsx",[],[],{"ruleId":"42","severity":1,"message":"43","line":26,"column":11,"nodeType":"44","endLine":26,"endColumn":134},{"ruleId":"42","severity":1,"message":"45","line":43,"column":11,"nodeType":"44","endLine":43,"endColumn":164},{"ruleId":"42","severity":1,"message":"46","line":61,"column":11,"nodeType":"44","endLine":61,"endColumn":163},{"ruleId":"42","severity":1,"message":"47","line":79,"column":11,"nodeType":"44","endLine":79,"endColumn":164},"react-hooks/exhaustive-deps","The 'cyImages' array makes the dependencies of useEffect Hook (at line 40) change on every render. To fix this, wrap the initialization of 'cyImages' in its own useMemo() Hook.","VariableDeclarator","The 'jbtiImages' array makes the dependencies of useEffect Hook (at line 57) change on every render. To fix this, wrap the initialization of 'jbtiImages' in its own useMemo() Hook.","The 'penImages' array makes the dependencies of useEffect Hook (at line 75) change on every render. To fix this, wrap the initialization of 'penImages' in its own useMemo() Hook.","The 'sellImages' array makes the dependencies of useEffect Hook (at line 93) change on every render. To fix this, wrap the initialization of 'sellImages' in its own useMemo() Hook."]